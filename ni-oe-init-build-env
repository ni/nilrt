#!/usr/bin/env

SCRIPT_ROOT=$(realpath $(dirname ${BASH_SOURCE:-${0}}))

enable_ni_org_conf=false
positionals=()

while [ $# -ge 1 ]; do case "$1" in
	-o|--org)
		enable_ni_org_conf=true
		shift
		;;
	*)
		positionals+=($1)
		shift
		;;
esac; done


BITBAKEDIR=${BITBAKEDIR:-${SCRIPT_ROOT}/sources/bitbake}
BUILDDIR=${BUILDDIR:-${SCRIPT_ROOT}/build}

BB_ENV_EXTRAWHITE="${BB_ENV_EXTRAWHITE} ENABLE_BUILD_TAG_PUSH"

# define the location of bitbake configuration files, which will be copied
# into the build workspace, if one needs to be created.
TEMPLATECONF=${TEMPLATECONF:-${SCRIPT_ROOT}/sources/meta-nilrt/conf}

export TEMPLATECONF

# Call OE-upstream's build env initialization script, which will create a build
# workspace called either "${1:-build}/" and `cd` into it.
cd ${SCRIPT_ROOT}
. ./sources/openembedded-core/oe-init-build-env ${positionals[@]}

if $enable_ni_org_conf; then
	if [ ! -e conf/site.conf ]; then
		echo "Adding NI org.conf as conf/site.conf..."
		cp ${SCRIPT_ROOT}/scripts/azdo/conf/ni-org.conf ./conf/site.conf
	fi
fi

# Add a marker to the prompt based on whether or not bitbake is in the
# environment.
if which bitbake >/dev/null; then
	if [[ ! "${PS1}" =~ ^\(bb\).* ]]; then
		export PS1="(bb) $PS1"
	fi
else
	echo "ERROR: 'bitbake' command is not available in the environment."
fi
