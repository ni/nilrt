#!/usr/bin/env

SCRIPT_ROOT=$(realpath $(dirname ${BASH_SOURCE:-${0}}))

enable_ni_org_conf=false
positionals=()

while [ $# -ge 1 ]; do case "$1" in
	-o|--org)
		enable_ni_org_conf=true
		shift
		;;
	*)
		positionals+=($1)
		shift
		;;
esac; done

NILRT_ROOT="${SCRIPT_ROOT}"

# GIT_REPODIR is used by the meta-nilrt bblayers.conf to locate the BB layer
# top-level directory.
export GIT_REPODIR="${NILRT_ROOT}/sources"

# Enable color terminal
export TERM=xterm-256color

BITBAKEDIR=${BITBAKEDIR:-${NILRT_ROOT}/sources/bitbake}
BUILDDIR=${BUILDDIR:-./build}

# Users can assert the maximum number of concurrent bitbake threads via the
# BB_NUMBER_THREADS variable, or let this script calculate a reasonable value
# based on the number of cores.
if [ -z "$BB_NUMBER_THREADS" ]; then
	echo "INFO: BB_NUMBER_THREADS not set. Calculating..."
	# num_cores * 2 is the recommended value from the yocto manual
	BB_NUMBER_THREADS=$(($(nproc) * 2))
fi
export BB_NUMBER_THREADS
echo "BB_NUMBER_THREADS=${BB_NUMBER_THREADS}"

# define the location of bitbake configuration files, which will be copied
# into the build workspace, if one needs to be created.
export TEMPLATECONF=${TEMPLATECONF:-${NILRT_ROOT}/sources/meta-nilrt/conf}

set -x

export PYREXCONFFILE="${SCRIPT_ROOT}/pyrex.ini"
export PYREX_CONFIG_BIND="${NILRT_ROOT}"
export PYREX_OEINIT="${NILRT_ROOT}/sources/openembedded-core/oe-init-build-env"
export PYREX_ROOT="${NILRT_ROOT}/sources/pyrex"

# Define here all NILRT-specific variables which need to be passed to bitbake
export BB_ENV_EXTRAWHITE="${BB_ENV_EXTRAWHITE} \
	GIT_REPODIR \
"

unset SCRIPT_ROOT

if [ -z "$PYREX_TEMP_ENV_FILE" ]; then
	PYREX_TEMP_ENV_FILE=$(mktemp -t pyrex-env.XXXXXX)
fi

pyrex_cleanup() {
	rm -f "$PYREX_TEMP_ENV_FILE"
	unset PYREX_OEINIT PYREX_ROOT PYREX_TEMP_ENV_FILE pyrex_cleanup
}


"$PYREX_ROOT/pyrex.py" capture \
		-a PYREX_OEINIT "$PYREX_OEINIT" \
		-e PYREXCONFFILE \
		-e TEMPLATECONF \
		-- 9 "$@" \
		9> "$PYREX_TEMP_ENV_FILE"
if [ $? -ne 0 ]; then
	pyrex_cleanup
	return 1
fi

. "$PYREX_TEMP_ENV_FILE"
if [ $? -ne 0 ]; then
	pyrex_cleanup
	return 1
fi

pyrex_cleanup
